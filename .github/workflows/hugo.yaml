# 用于构建并部署 Hugo 博客到 GitHub Pages 的工作流
# 你可以根据自己的需求调整参数和步骤

name: Deploy Hugo site to Pages  # 工作流名称

on:
  # 当推送到 main 分支时自动触发
  push:
    branches:
      - main
  # 允许手动在 Actions 页面触发
  workflow_dispatch:

# 设置 GITHUB_TOKEN 权限，允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个部署任务并发，避免重复部署
concurrency:
  group: "pages"
  cancel-in-progress: false

# 默认使用 bash 作为 shell
defaults:
  run:
    shell: bash

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest  # 运行环境
    env:
      HUGO_VERSION: 0.147.2  # Hugo 版本，可根据需要修改
      HUGO_ENVIRONMENT: production  # Hugo 环境变量，可自定义
      TZ: Asia/Shanghai  # 时区，建议根据实际情况修改
    steps:
      # 安装 Hugo CLI
      - name: 安装 Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      # 如主题依赖 Dart Sass，可保留此步骤，否则可删除
      # - name: 安装 Dart Sass
      #   run: sudo snap install dart-sass
      # 检出代码（含子模块）
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # 生成摘要（Hugo 构建前，使用 uv 安装依赖）
      - name: 设置 Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: 安装依赖
        run: |
          cd scripts && pip install -r requirements.txt 
      - name: 生成摘要
        env:
          QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        run: |
          python scripts/generate_summaries.py
      - name: 检查更改并提交
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add content/posts
            git commit -m "自动生成/更新博客摘要"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            git push
          else
            echo "没有需要提交的更改"
          fi

      # 配置 GitHub Pages 环境
      - name: 配置 Pages
        id: pages
        uses: actions/configure-pages@v5
      # 如有 Node.js 依赖（如前端构建），可保留此步骤，否则可删除
      # - name: 安装 Node.js 依赖
      #   run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      # 恢复 Hugo 缓存，加快构建速度
      - name: 恢复缓存
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: hugo-${{ github.run_id }}
          restore-keys:
            hugo-
      # 配置 Git，避免中文路径乱码
      - name: 配置 Git
        run: git config core.quotepath false
      # 使用 Hugo 构建静态网站
      - name: Hugo 构建
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --cacheDir "${{ runner.temp }}/hugo_cache"
      # 保存 Hugo 缓存
      - name: 保存缓存
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
      # 上传构建产物供后续部署
      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build  # 依赖 build 任务
    steps:
      # 部署到 GitHub Pages
      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4